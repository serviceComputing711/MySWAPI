/*
 * SWAPI
 *
 * This is a RESTful API SWAPI written in GO. You can find out more about SWAPI at [https://www.swapi.co](https://www.swapi.co). And you can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). 
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"encoding/json"
	"io/ioutil"
	"fmt"
	"net/http"

	db "github.com/blesswxl/MySWAPI/StarWars/database"
	jwt "github.com/blesswxl/MySWAPI/jwt"
)

type LoginInfo struct {
	name string `json:"name"`
}

/*
 * People log in the server
 * param:
 *   name: name of peopel to log in
 * return:
 *   200: Successful operation
 *   404: People not found
 */
func Login(w http.ResponseWriter, r *http.Request) {
	myDb, err := db.StartDB("mydb.db")
	if err != nil {
		fmt.Printf("Fail in open database: %v\n", err)
		return
	}

	// Read data from http request body
	body, err := ioutil.ReadAll(r.Body)
    if err != nil {
		fmt.Printf("Read body error: %v\n", err)
        return
	}

	// Unmarshal to json
	var info LoginInfo
	if err = json.Unmarshal(body, &info); err != nil {
        fmt.Printf("Unmarshal err, %v\n", err)
        return
    }
	
	// Whether the people exists
	if !myDb.HasObj("people", []byte(info.name)) {
		fmt.Printf("People dose not exist\n")
        return
	}

	// Generate token by name
	token := jwt.GenerateToken(info.name)

	myDb.LogIn([]byte(info.name), []byte(token))

	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
	w.Write([]byte(token))
}
