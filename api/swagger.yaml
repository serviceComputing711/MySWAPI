swagger: "2.0"
info:
  description: "This is a RESTful API SWAPI written in GO. You can find out more about SWAPI at [https://www.swapi.co](https://www.swapi.co). And you can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). "
  version: "1.0.0"
  title: "SWAPI"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
tags:
- name: "root"
  description: ""
- name: "login"
  description: ""
- name: "people"
  description: "Operations about people"
- name: "planets"
  description: "Operations about planets"
- name: "spaceships"
  description: "Operations about spaceships"
- name: "vehicles"
  description: "Operations about vehicles"
- name: "films"
  description: "Operations about films"
- name: "species"
  description: "Operations about species"
schemes:
- "http"
paths:
  /root:
    get:
      tags:
      - "root"
      summary: "Get all optional API"
      description: ""
      operationId: "getAllAPI"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Root"
        404:
          description: "Root not found"
  /login:
    get:
      tags:
      - "login"
      summary: "People log in the server"
      description: ""
      operationId: "login"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "body"
        description: "Name of peopel to log in"
        required: true
        schema:
          type: string
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Already log in"
        404:
          description: "People not found"
  /people:
    get:
      tags:
      - "people"
      summary: "Get people by page"
      description: "Returns a page of people"
      operationId: "getPeopleByPage"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
        x-exportParamName: "Authorization"
      - name: "peoplePage"
        in: "query"
        description: "ID of people to return"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PeopleId"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        404:
          description: "Invalid ID supplied"
  /people/{peopleId}:
    get:
      tags:
      - "people"
      summary: "Get people by ID"
      description: "Returns a single people"
      operationId: "getPeopleById"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
        x-exportParamName: "Authorization"
      - name: "peopleId"
        in: "path"
        description: "ID of people to return"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "peopleId"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        404:
          description: "Invalid ID supplied"
    post:
      tags:
      - "people"
      summary: "Add a people"
      description: ""
      operationId: "addPeople"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
        x-exportParamName: "Authorization"
      - name: "peopleId"
        in: "path"
        description: "ID of people that needs to be added"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "peopleId"
      - name: "Info"
        in: "formData"
        description: "Add a people with information"
        required: true
        type: "string"
        x-exportParamName: "Info"
      responses:        
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        404:
          description: "Invalid input"
    delete:
      tags:
      - "people"
      summary: "Delete a people"
      description: ""
      operationId: "deletePeople"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
        x-exportParamName: "Authorization"
      - name: "peopleId"
        in: "path"
        description: "People id to delete"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "peopleId"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        404:
          description: "Invalid ID supplied"
definitions:
  Root:
    type: "object"
    properties:
      people:
        type: "string"
      planets:
        type: "string"
      spaceships:
        type: "string"
      vehicles:
        type: "string"
      films:
        type: "string"
      species:
        type: "string"
    xml:
      name: "Root"